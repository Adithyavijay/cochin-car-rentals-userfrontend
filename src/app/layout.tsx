'use client'
// import type { Metadata } from "next";
// import { Raleway } from "next/font/google";
// import localFont from "next/font/local";
import "./globals.css";
import Header from "@/modules/header/views/Header";
import ApolloWrapper from "@/modules/ApolloWrapper.tsx/ApolloWrapper";
import { Toaster } from "react-hot-toast";
import { RecoilRoot, useRecoilValue, useSetRecoilState } from 'recoil';
import { userAtom } from '@/atoms/userAtom';
import {useEffect} from 'react'

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });
// const raleway = Raleway({
//   subsets: ['latin'],
//   style: ['italic', 'normal'],
//   weight: ['400', '500', '600', '700'],
//   variable: '--font-raleway',
// });


// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app", 
// };


function UserInitializer(){
  const setUser = useSetRecoilState(userAtom) ;

  useEffect(() => {
  
    const storedUser= localStorage.getItem('userDetails');
    if(storedUser){
      setUser(JSON.parse(storedUser))
    }
  }, [setUser]);

  return null; 
}

function UserPersister() {
  const user = useRecoilValue(userAtom);

  useEffect(() => {
    if (user) {
      localStorage.setItem('userDetails', JSON.stringify(user));
    }
  }, [user]); // Only runs when 'user' changes

  return null;
}


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en"> 
    <head><link href="https://fonts.googleapis.com/css2?family=Syncopate:wght@700&family=Montserrat:wght@400;600&display=swap" rel="stylesheet"/></head>
      <body
        className={`italic antialiased`} 
      > 
        <RecoilRoot>
        <ApolloWrapper>
        <UserInitializer/>
        <UserPersister/>
        <Header/>
        <Toaster
        position="top-center"
        reverseOrder={false}
        toastOptions={{
          // You can add global options here
          duration: 1000,
        }}
      />
        {children} 
        </ApolloWrapper>
        </RecoilRoot>
      </body>
    </html>
  );
}
